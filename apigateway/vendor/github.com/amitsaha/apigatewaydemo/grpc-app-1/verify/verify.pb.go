// Code generated by protoc-gen-go.
// source: verify.proto
// DO NOT EDIT!

/*
Package userverify is a generated protocol buffer package.

It is generated from these files:
	verify.proto

It has these top-level messages:
	VerifyRequest
	VerifyReply
*/
package userverify

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type VerifyRequest struct {
	Id    int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
}

func (m *VerifyRequest) Reset()                    { *m = VerifyRequest{} }
func (m *VerifyRequest) String() string            { return proto.CompactTextString(m) }
func (*VerifyRequest) ProtoMessage()               {}
func (*VerifyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// The response message containing the greetings
type VerifyReply struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *VerifyReply) Reset()                    { *m = VerifyReply{} }
func (m *VerifyReply) String() string            { return proto.CompactTextString(m) }
func (*VerifyReply) ProtoMessage()               {}
func (*VerifyReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*VerifyRequest)(nil), "userverify.VerifyRequest")
	proto.RegisterType((*VerifyReply)(nil), "userverify.VerifyReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for UserVerify service

type UserVerifyClient interface {
	VerifyUser(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyReply, error)
}

type userVerifyClient struct {
	cc *grpc.ClientConn
}

func NewUserVerifyClient(cc *grpc.ClientConn) UserVerifyClient {
	return &userVerifyClient{cc}
}

func (c *userVerifyClient) VerifyUser(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyReply, error) {
	out := new(VerifyReply)
	err := grpc.Invoke(ctx, "/userverify.UserVerify/VerifyUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserVerify service

type UserVerifyServer interface {
	VerifyUser(context.Context, *VerifyRequest) (*VerifyReply, error)
}

func RegisterUserVerifyServer(s *grpc.Server, srv UserVerifyServer) {
	s.RegisterService(&_UserVerify_serviceDesc, srv)
}

func _UserVerify_VerifyUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserVerifyServer).VerifyUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/userverify.UserVerify/VerifyUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserVerifyServer).VerifyUser(ctx, req.(*VerifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserVerify_serviceDesc = grpc.ServiceDesc{
	ServiceName: "userverify.UserVerify",
	HandlerType: (*UserVerifyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "VerifyUser",
			Handler:    _UserVerify_VerifyUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "verify.proto",
}

func init() { proto.RegisterFile("verify.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 156 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4b, 0x2d, 0xca,
	0x4c, 0xab, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x2a, 0x2d, 0x4e, 0x2d, 0x82, 0x88,
	0x28, 0x99, 0x72, 0xf1, 0x86, 0x81, 0x59, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x7c,
	0x5c, 0x4c, 0x99, 0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xac, 0x41, 0x40, 0x96, 0x90, 0x08, 0x17,
	0x6b, 0x49, 0x7e, 0x76, 0x6a, 0x9e, 0x04, 0x13, 0x50, 0x88, 0x33, 0x08, 0xc2, 0x51, 0x52, 0xe7,
	0xe2, 0x86, 0x69, 0x2b, 0xc8, 0xa9, 0x14, 0x92, 0xe0, 0x62, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c,
	0x4f, 0x05, 0xeb, 0xe4, 0x0c, 0x82, 0x71, 0x8d, 0x02, 0xb8, 0xb8, 0x42, 0x81, 0xb6, 0x41, 0x14,
	0x0b, 0x39, 0x71, 0x71, 0x41, 0x58, 0x20, 0x31, 0x21, 0x49, 0x3d, 0x84, 0x43, 0xf4, 0x50, 0x5c,
	0x21, 0x25, 0x8e, 0x4d, 0x0a, 0x68, 0x93, 0x12, 0x43, 0x12, 0x1b, 0xd8, 0x13, 0xc6, 0x80, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xd5, 0xee, 0x80, 0xf4, 0xd4, 0x00, 0x00, 0x00,
}
